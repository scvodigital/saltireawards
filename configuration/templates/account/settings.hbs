{{#*inline "linkChip"}}
  <span class="chip bg-primary bg-{{provider}}" data-provider-link="{{provider}}">
    {{#if linked ~}}
    <span class="far fa-fw fa-ban"></span>
    Unlink from
    {{else}}
    <span class="fab fa-fw fa-{{provider}}"></span>
    Link to
    {{/if ~}}
    {{capitalize provider}}
  </span>
{{/inline}}

<div class="container b-padding-full v-margin-full">
  <h1>My account</h1>

  <h2>My details</h2>

  <div class="columns col-gapless">
    <div class="col-9">
      <form id="user-details-form" action="/submit-user-details" method="POST" data-ajax-form='{
        "successCallback": "completeAccountCB",
        "failureCallback": "completeAccountCB"
      }'>

        {{> account_details_form_fields admin=(compare @root.data.accountInfo.user_type '===' 'Group Admin')}}

        {{!-- This will probably have a captcha in it, hence the separation, and weird submit format --}}
        <div class="columns col-gapless">
          <div class="col-3"></div>
          <div class="col-2">
            <button id="detail-submit" class="btn btn-primary b-margin-full" id="register-interest-submit">
              Save details
            </button>
          </div>
        </div>
      </form>

      <div class="divider"></div>

      <h2>My settings</h2>

      <div class="columns col-gapless">
        <div class="col-4">
          {{#if (contains (map @root.data.auth.providerData (getProp "providerId")) "password") ~}}
          <h3>Change password</h3>
          {{else}}
          <h3>Set password</h3>
          <p>
            You are currently using a social media account to sign in. If you set a password you will also be able to sign in with your email address.
          </p>
          {{/if ~}}

          <div class="form-group has-icon-left r-margin">
            <!-- <label class="form-label" for="change-password-password">New password</label> -->
            <input class="form-input" type="password" id="change-password-password" placeholder="New password" data-lpignore="true" autocomplete="off" required />
            <span class="form-icon far fa-key" id="change-password-password-icon"></span>
          </div>
          <div class="form-group has-icon-left r-margin">
            <!-- <label class="form-label" for="change-password-confirm">New password (confirm)</label> -->
            <input class="form-input" type="password" id="change-password-confirm" placeholder="Confirm password" data-lpignore="true" autocomplete="off" required />
            <span class="form-icon far fa-key" id="change-password-confirm-icon"></span>
          </div>

          <button class="btn btn-primary" id="change-password">
            {{!-- <span class="far fa-lock" aria-hidden="true"></span> --}}
            {{#if (contains (map @root.data.auth.providerData (getProp "providerId")) "password") ~}}
            Change password
            {{else}}
            Set password
            {{/if ~}}
          </button>
        </div>
        <div class="col-4">
          <h3>
            Linked accounts
          </h3>
          <div class="mdc-chip-set mdc-chip-set--filter">
            {{#each (split "google,twitter,facebook" ",") ~}}
              <div class="v-margin">
                {{> linkChip
                    provider=this
                    linked=(contains (map @root.data.auth.providerData (getProp "providerId")) (concat this ".com"))
                }}
              </div>
            {{/each ~}}
          </div>
        </div>
        <div class="col-4">
          <h3>Account data</h3>
          <!-- <button type="button" class="mdc-button mdc-button--raised mdc-button--export mdc-button--fullwidth v-margin" onclick="exportUserData();">
            <span class="far fa-upload mdc-list-item__graphic" aria-hidden="true"></span>
            Export account settings
          </button>
          <button class="mdc-button mdc-button--raised mdc-button--import mdc-button--fullwidth v-margin" data-dialog-target="#import-user-dialog">
            <span class="far fa-download mdc-list-item__graphic" aria-hidden="true"></span>
            Import account settings
          </button> -->
          <button class="btn btn-error v-margin" id="delete-account-button">
            <!-- <span class="far fa-trash mdc-list-item__graphic" aria-hidden="true"></span> -->
            Delete account
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="modal modal-sm" id="delete-account-modal">
  <a href="#" class="modal-overlay" aria-label="Close"></a>
  <div class="modal-container">
    <div class="modal-header">
      <a href="#close" class="btn btn-clear float-right" aria-label="Close"></a>
      <div class="modal-title h5">Are you sure you want to delete your account?</div>
    </div>
    <div class="modal-body">
      <div class="content">
        <p>
          Deleting your account will:
        </p>
        <ul>
          <li>Fully remove your account from the Saltire Awards system</li>
        </ul>
      </div>
    </div>
    <div class="modal-footer">
      <a href="#" class="btn btn-primary">Delete account</button>
      <a href="#" class="btn btn-link">Cancel</a>
    </div>
  </div>
</div>

{{!-- <aside id="delete-user-dialog" class="mdc-dialog" role="alertdialog" aria-labelledby="delete-user-dialog-label" aria-describedby="delete-user-dialog-description" data-mdc-auto-init="MDCDialog">
  <div class="mdc-dialog__container">
    <div action="/delete-user" method="GET" class="mdc-dialog__surface">
      <header class="mdc-dialog__header">
        <h2 id="delete-user-dialog-label" class="mdc-dialog__title">Are you sure you want to delete your account?</h2>
      </header>
      <section id="delete-user-dialog-description" class="mdc-dialog__content">
        <p>
          Deleting your account will:
        </p>
        <ul>
          <!-- <li>Stop all email alerts</li>
          <li>Delete your saved searches</li>
          <li>Delete your shortlist</li>
          <li>Delete your notes on vacancies</li> -->
          <li>Fully remove your account from the Saltire Awards system</li>
        </ul>
      </section>
      <footer class="mdc-dialog__actions">
        <button type="button" class="mdc-button mdc-dialog__button mdc-ripple-upgraded" data-mdc-dialog-action="close">Cancel</button>
        <a href="/delete-user" class="mdc-button mdc-dialog__button mdc-ripple-upgraded" data-mdc-dialog-action="accept">Delete account</a>
      </footer>
    </div>
  </div>
  <div class="mdc-dialog__scrim"></div>
</aside> --}}

<!-- <aside id="import-user-dialog" class="mdc-dialog" role="alertdialog" aria-labelledby="import-user-dialog-label" aria-describedby="import-user-dialog-description" data-mdc-auto-init="MDCDialog">
  <div class="mdc-dialog__container">
    <form action="/import-user-data" method="POST" class="mdc-dialog__surface" data-ajax-form='{
        "successMessage": "Data imported successfully",
        "failureMessage": "Failed to import data"
      }'>
      <header class="mdc-dialog__header">
        <h2 id="import-user-dialog-label" class="mdc-dialog__title">Import user data</h2>
      </header>
      <section id="import-user-dialog-description" class="mdc-dialog__content">
        <div class="mdc-text-field mdc-text-field--textarea mdc-text-field--fullwidth" data-mdc-auto-init="MDCTextField">
          <textarea id="import-user-json" name="json" class="mdc-text-field__input" rows="10"></textarea>
          <label for="import-user-json" class="mdc-floating-label">Paste exported data here</label>
        </div>
      </section>
      <footer class="mdc-dialog__actions">
        <button type="button" class="mdc-button mdc-dialog__button mdc-ripple-upgraded" data-mdc-dialog-action="close">Cancel</button>
        <button type="submit" class="mdc-button mdc-dialog__button mdc-ripple-upgraded" data-mdc-dialog-action="accept">Import User</button>
      </footer>
    </form>
  </div>
  <div class="mdc-dialog__scrim"></div>
</aside> -->

{{!-- <script src="https://www.google.com/recaptcha/api.js" async defer></script> --}}
<script src="{{~>asset_url url='downloader.js'~}}"></script>
<script>
  {{#if @root.data.export_user_data ~}}
  function exportUserData() {
    var dataUrl = 'data:application/json;base64,{{{btoa @root.data.export_user_data}}}';
    download(dataUrl, 'user-export.json', 'application/json');
  };
  {{/if ~}}
  document.addEventListener("DOMContentLoaded", function(event) {
    $('#user-details-form').on('submit', function(e){
      $('#detail-submit').prop('disabled', true);
    })
    var $changePassword = $('#change-password');
    var $deleteAccount = $('#delete-account-button')
    var $deleteAccountModal = $('#delete-account-modal')
    var $password1 = $('#change-password-password');
    var $password2 = $('#change-password-confirm');
    var $password1Icon = $('#change-password-password-icon');
    var $password2Icon = $('#change-password-confirm-icon');

    $('[data-provider-link]').each(function(i, o) {
      var $chip = $(o);
      var $linkAction = $chip.find('.link-action');
      // var chip = new mdc.chips.MDCChip(o);
      var providerName = $chip.data('provider-link');

      $chip.on('click', function(evt) {
        if (!$chip.data('disabled')) {
          $chip.data('disabled', true);
          $chip.css('opacity', 0.5);
          var selected = $chip.hasClass('mdc-chip--selected');
          if (!selected) {
            saltireawards.auth.linkWithProvider(providerName).then(function(result) {
              console.log('Linked to', providerName, result);
              chip.foundation_.setSelected(!selected);
              $linkAction.text('Unlink from');
              $chip.data('disabled', false);
              $chip.css('opacity', 1);
              checkProviders();
            }).catch(function(err) {
              console.error('Failed to link to', providerName, err);
              $chip.data('disabled', false);
              $chip.css('opacity', 1);
              checkProviders();
              window.setTimeout(function() {
                window.location.href = '/sign-in?reauth=true';
              }, 1000);
            });
          } else {
            saltireawards.auth.unlinkFromProvider(providerName).then(function(result) {
              console.log('Unlinked from', providerName, result);
              chip.foundation_.setSelected(!selected);
              $linkAction.text('Link to');
              $chip.data('disabled', false);
              $chip.css('opacity', 1);
              checkProviders();
            }).catch(function(err) {
              console.error('Failed to unlink from', providerName, err);
              $chip.data('disabled', false);
              $chip.css('opacity', 1);
              checkProviders();
              if (err.code === 'auth/requires-recent-login') {
                window.setTimeout(function() {
                  window.location.href = '/sign-in?reauth=true';
                }, 1000);
              }
            });
          }
        }
      });
    });

    function checkProviders() {
      var enabled = saltireawards.auth.providerIds.length > 1;
      $('.mdc-chip--selected[data-provider-link]')
        .data('disabled', !enabled)
        .css({
          'opacity': enabled ? 1 : 0.5,
          'cursor': enabled ? 'pointer' : 'default'
        })
        .attr('title', !enabled ? 'You cannot unlink your social account as you are using it to sign in' : '');
    }

    $deleteAccount.on('click', deleteAccount);

    $changePassword.on('click', changePassword);
    $password1.on('keypress', function(evt) {
      if (evt.which === 13) {
        $password2.focus();
      }
    });
    $password2.on('keypress', function(evt) {
      if (evt.which === 13) {
        changePassword();
      }
    });

    function changePassword() {
      $password1Icon.addClass('loading');
      $password2Icon.addClass('loading');
      var password1 = $password1.val();
      var password2 = $password2.val();
      saltireawards.disable([$changePassword, $password1, $password2]);

      saltireawards.auth.changePassword(password1, password2).then(function() {
        saltireawards.snackbarShow({
          message: 'Password changed, please wait',
        });
        window.setTimeout(function() {
          window.location.reload();
        }, 1000);
      }).catch(function(err) {
        saltireawards.disable([$changePassword, $password1, $password2], false);
        $password1.val('');
        $password2.val('');
        $password1.focus();
        $password1Icon.removeClass('loading');
        $password2Icon.removeClass('loading');
        saltireawards.snackbarShow({
          message: err.message || 'There was a problem changing your password',
          backgroundColor: '#dd4b39'
        });
        if (err.code === 'auth/requires-recent-login') {
          window.setTimeout(function() {
            window.location.href = '/sign-in?reauth=true';
          }, 1000);
        }
        return;
      });
    }

    function deleteAccount() {
      $deleteAccountModal.addClass('active');
    }
  });
</script>